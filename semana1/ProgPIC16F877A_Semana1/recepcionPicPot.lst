CCS PCM C Compiler, Version 5.008, 5967               27-jun-15 19:02

               Filename:   C:\Universidad\Erick-UNI\2015-I\TiempoReal\Laboratorios\presentacionSemana1\ProgPIC16F877A_Semana1\recepcionPicPot.lst

               ROM used:   240 words (3%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           16 (4%) worst case
               Stack used: 1 locations
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   091
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0004:  CLRF   2B
0005:  MOVF   04,W
0006:  MOVWF  2A
0007:  BCF    2B.0
0008:  BTFSC  03.7
0009:  BSF    2B.0
000A:  BTFSS  24.7
000B:  GOTO   014
000C:  BSF    2A.7
000D:  BTFSS  2A.4
000E:  INCF   2A,F
000F:  COMF   23,F
0010:  COMF   24,F
0011:  INCF   23,F
0012:  BTFSC  03.2
0013:  INCF   24,F
0014:  SWAPF  24,W
0015:  IORLW  F0
0016:  MOVWF  26
0017:  ADDWF  26,F
0018:  ADDLW  E2
0019:  MOVWF  27
001A:  ADDLW  32
001B:  MOVWF  29
001C:  MOVF   24,W
001D:  ANDLW  0F
001E:  ADDWF  27,F
001F:  ADDWF  27,F
0020:  ADDWF  29,F
0021:  ADDLW  E9
0022:  MOVWF  28
0023:  ADDWF  28,F
0024:  ADDWF  28,F
0025:  SWAPF  23,W
0026:  ANDLW  0F
0027:  ADDWF  28,F
0028:  ADDWF  29,F
0029:  RLF    28,F
002A:  RLF    29,F
002B:  COMF   29,F
002C:  RLF    29,F
002D:  MOVF   23,W
002E:  ANDLW  0F
002F:  ADDWF  29,F
0030:  RLF    26,F
0031:  MOVLW  07
0032:  MOVWF  25
0033:  MOVLW  0A
0034:  ADDWF  29,F
0035:  DECF   28,F
0036:  BTFSS  03.0
0037:  GOTO   034
0038:  ADDWF  28,F
0039:  DECF   27,F
003A:  BTFSS  03.0
003B:  GOTO   038
003C:  ADDWF  27,F
003D:  DECF   26,F
003E:  BTFSS  03.0
003F:  GOTO   03C
0040:  ADDWF  26,F
0041:  DECF   25,F
0042:  BTFSS  03.0
0043:  GOTO   040
0044:  MOVLW  25
0045:  MOVWF  04
0046:  BCF    03.7
0047:  MOVLW  07
0048:  ANDWF  2A,W
0049:  BCF    2A.6
004A:  DECF   04,F
004B:  ANDWF  2A,W
004C:  BTFSS  03.2
004D:  GOTO   055
004E:  BTFSC  2A.4
004F:  INCF   04,F
0050:  BTFSC  2A.4
0051:  GOTO   055
0052:  MOVLW  20
0053:  MOVWF  77
0054:  GOTO   072
0055:  ADDWF  04,F
0056:  MOVLW  29
0057:  SUBWF  04,W
0058:  BTFSC  03.2
0059:  BSF    2A.6
005A:  MOVF   00,W
005B:  MOVWF  77
005C:  BTFSS  03.2
005D:  GOTO   066
005E:  BTFSC  2A.6
005F:  GOTO   066
0060:  BTFSC  2A.4
0061:  GOTO   076
0062:  BTFSC  2A.3
0063:  GOTO   066
0064:  MOVLW  20
0065:  GOTO   071
0066:  BTFSS  2A.7
0067:  GOTO   06E
0068:  MOVLW  2D
0069:  MOVWF  77
006A:  DECF   04,F
006B:  BCF    2A.6
006C:  BCF    2A.7
006D:  GOTO   072
006E:  BSF    2A.3
006F:  BCF    2A.4
0070:  MOVLW  30
0071:  ADDWF  77,F
0072:  MOVF   77,W
0073:  BTFSS  0C.4
0074:  GOTO   073
0075:  MOVWF  19
0076:  INCF   04,F
0077:  BTFSS  2A.6
0078:  GOTO   056
0079:  BCF    0A.3
007A:  BCF    0A.4
007B:  GOTO   0CB (RETURN)
....................  
.................... #list 
....................  
.................... #device ICD=TRUE 
.................... #device adc=12 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP  
.................... #use delay(clock=10000000)  
007C:  MOVLW  24
007D:  MOVWF  04
007E:  BCF    03.7
007F:  MOVF   00,W
0080:  BTFSC  03.2
0081:  GOTO   090
0082:  MOVLW  03
0083:  MOVWF  78
0084:  CLRF   77
0085:  DECFSZ 77,F
0086:  GOTO   085
0087:  DECFSZ 78,F
0088:  GOTO   084
0089:  MOVLW  3C
008A:  MOVWF  77
008B:  DECFSZ 77,F
008C:  GOTO   08B
008D:  GOTO   08E
008E:  DECFSZ 00,F
008F:  GOTO   082
0090:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8)  
.................... #use FAST_IO(A)  
.................... #use FAST_IO(B) 
.................... #use FAST_IO(C)  
.................... //#byte port_b=6 
.................... void main() 
0091:  MOVF   03,W
0092:  ANDLW  1F
0093:  MOVWF  03
0094:  MOVLW  40
0095:  BSF    03.5
0096:  MOVWF  19
0097:  MOVLW  A6
0098:  MOVWF  18
0099:  MOVLW  90
009A:  BCF    03.5
009B:  MOVWF  18
009C:  BSF    03.5
009D:  BSF    1F.0
009E:  BSF    1F.1
009F:  BSF    1F.2
00A0:  BCF    1F.3
00A1:  MOVLW  07
00A2:  MOVWF  1C
00A3:  BCF    03.7
.................... { 
....................    //int16 q; 
....................    //char q; 
....................    //char string[96]; 
....................  
....................   int16 q;//---------  1) No es la inicializacion 
....................    setup_adc_ports(AN0); 
00A4:  BCF    1F.0
00A5:  BSF    1F.1
00A6:  BSF    1F.2
00A7:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_INTERNAL); 
00A8:  BCF    1F.6
00A9:  BCF    03.5
00AA:  BSF    1F.6
00AB:  BSF    1F.7
00AC:  BSF    03.5
00AD:  BSF    1F.7
00AE:  BCF    03.5
00AF:  BSF    1F.0
.................... //printf("Tiempo"); 
.................... //putc(0x3B);//envia punto y coma 
.................... //printf("Tension\r"); 
.................... for(;;){ 
....................    set_adc_channel(0);   
00B0:  MOVLW  00
00B1:  MOVWF  78
00B2:  MOVF   1F,W
00B3:  ANDLW  C7
00B4:  IORWF  78,W
00B5:  MOVWF  1F
....................    delay_us(20); 
00B6:  MOVLW  10
00B7:  MOVWF  77
00B8:  DECFSZ 77,F
00B9:  GOTO   0B8
00BA:  NOP
....................      q=read_adc(); 
00BB:  BSF    1F.2
00BC:  BTFSC  1F.2
00BD:  GOTO   0BC
00BE:  BSF    03.5
00BF:  MOVF   1E,W
00C0:  BCF    03.5
00C1:  MOVWF  21
00C2:  MOVF   1E,W
00C3:  MOVWF  22
....................   // q=(int16)2; 
....................    printf("%4ld\r",q); 
00C4:  MOVLW  02
00C5:  MOVWF  04
00C6:  MOVF   22,W
00C7:  MOVWF  24
00C8:  MOVF   21,W
00C9:  MOVWF  23
00CA:  GOTO   004
00CB:  MOVLW  0D
00CC:  BTFSS  0C.4
00CD:  GOTO   0CC
00CE:  MOVWF  19
....................    //delay_ms(500); 
....................    //q=getch(); 
....................    //q=2; 
....................   // gets(string); 
....................  //printf("%4ld",p++);//p se incrementa cada un segundo y se envia por usart 
....................  //putc(0x3B); 
.................... //printf("%c\r",q);//q contiene el valor del convertidor ana / dig fila a fila 
....................  //printf("%c",q);//datos en serie 
....................  delay_ms(1000); 
00CF:  MOVLW  04
00D0:  MOVWF  23
00D1:  MOVLW  FA
00D2:  MOVWF  24
00D3:  CALL   07C
00D4:  DECFSZ 23,F
00D5:  GOTO   0D1
....................  //output_bit(PIN_D0,1); 
.................... output_toggle(PIN_D0); 
00D6:  BSF    03.5
00D7:  BCF    08.0
00D8:  MOVLW  01
00D9:  BCF    03.5
00DA:  XORWF  08,F
.................... delay_ms(200);// 2) Al agregrle esta linea el ADC envia un formato de 5 digitos (eg.00935) 
00DB:  MOVLW  C8
00DC:  MOVWF  24
00DD:  CALL   07C
.................... output_toggle(PIN_D1); 
00DE:  BSF    03.5
00DF:  BCF    08.1
00E0:  MOVLW  02
00E1:  BCF    03.5
00E2:  XORWF  08,F
....................  delay_ms(200); 
00E3:  MOVLW  C8
00E4:  MOVWF  24
00E5:  CALL   07C
....................   output_toggle(PIN_D2); 
00E6:  BSF    03.5
00E7:  BCF    08.2
00E8:  MOVLW  04
00E9:  BCF    03.5
00EA:  XORWF  08,F
....................   delay_us(3000); 
00EB:  MOVLW  03
00EC:  MOVWF  24
00ED:  CALL   07C
00EE:  GOTO   0B0
....................   
....................  } 
.................... } 
....................  
00EF:  GOTO   0EF

Configuration Fuses:
   Word  1: 373A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
